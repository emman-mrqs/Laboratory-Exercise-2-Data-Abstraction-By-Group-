//Emmanuel Marqueses work's

package LibraryManagementSystem;

import javax.swing.*;
import java.awt.*;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

public class LibraryManagementSystem {
    private Library library;
    private JFrame frame;
    private JTextArea displayArea;
    private JTextField bookField;
    private JTextField indexField;

    public LibraryManagementSystem() {
        library = new Library();
        
        // Frame setup
        frame = new JFrame("Library Management System");
        frame.setSize(450, 350);
        frame.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
        frame.setLayout(new BorderLayout());

        // Top panel with input fields and buttons
        JPanel topPanel = new JPanel();
        topPanel.setLayout(new GridBagLayout());
        topPanel.setBackground(new Color(240, 240, 240));
        GridBagConstraints gbc = new GridBagConstraints();
        gbc.insets = new Insets(5, 5, 5, 5);

        // Book name label and field
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.WEST;
        JLabel bookLabel = new JLabel("Book Name:");
        bookLabel.setFont(new Font("SansSerif", Font.BOLD, 14));
        topPanel.add(bookLabel, gbc);

        gbc.gridx = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        bookField = new JTextField(15);
        topPanel.add(bookField, gbc);

        // Index label and field
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.NONE;
        JLabel indexLabel = new JLabel("Index:");
        indexLabel.setFont(new Font("SansSerif", Font.BOLD, 14));
        topPanel.add(indexLabel, gbc);

        gbc.gridx = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        indexField = new JTextField(5);
        topPanel.add(indexField, gbc);

        // Buttons for adding, inserting, removing, and displaying total books
        JPanel buttonPanel = new JPanel();
        buttonPanel.setBackground(new Color(240, 240, 240));

//Joshua Nanoy's Work
JButton addButton = new JButton("Add Book");
        styleButton(addButton);
        addButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                String bookName = bookField.getText();
                if (bookName.isEmpty()) {
                    JOptionPane.showMessageDialog(frame, "Book name cannot be empty.");
                    return;
                }
                library.addBook(bookName);
                updateDisplay();
            }
        });
        buttonPanel.add(addButton);

        JButton insertButton = new JButton("Insert Book");
        styleButton(insertButton);
        insertButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    int index = Integer.parseInt(indexField.getText());
                    String bookName = bookField.getText();
                    if (bookName.isEmpty()) {
                        JOptionPane.showMessageDialog(frame, "Book name cannot be empty.");
                        return;
                    }
                    library.insertBook(index, bookName);
                    updateDisplay();
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "Please enter a valid index.");
                }
            }
        });
        buttonPanel.add(insertButton);

        JButton removeButton = new JButton("Remove Book");
        styleButton(removeButton);
        removeButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                try {
                    int index = Integer.parseInt(indexField.getText());
                    library.removeBook(index);
                    updateDisplay();
                } catch (NumberFormatException ex) {
                    JOptionPane.showMessageDialog(frame, "Please enter a valid index.");
                }
            }
        });
        buttonPanel.add(removeButton);

        JButton totalBooksButton = new JButton("Total Books");
        styleButton(totalBooksButton);
        totalBooksButton.addActionListener(new ActionListener() {
            @Override
            public void actionPerformed(ActionEvent e) {
                JOptionPane.showMessageDialog(frame, "Total books: " + library.totalBooks());
            }
        });
        buttonPanel.add(totalBooksButton);

        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.gridwidth = 2;
        topPanel.add(buttonPanel, gbc);

//Carl Zabala's Work
displayArea = new JTextArea();
        displayArea.setFont(new Font("Monospaced", Font.PLAIN, 14));
        displayArea.setEditable(false);
        displayArea.setBorder(BorderFactory.createLineBorder(Color.GRAY));
        JScrollPane scrollPane = new JScrollPane(displayArea);
        
             frame.add(topPanel, BorderLayout.NORTH);
        frame.add(scrollPane, BorderLayout.CENTER);
        
        frame.setVisible(true);
    }

   
    private void styleButton(JButton button) {
        button.setFont(new Font("SansSerif", Font.PLAIN, 14));
        button.setBackground(new Color(70, 130, 180));
        button.setForeground(Color.WHITE);
        button.setFocusPainted(false);
        button.setBorderPainted(false);
        button.setOpaque(true);
        button.setCursor(new Cursor(Cursor.HAND_CURSOR));
    }

    private void updateDisplay() {
        StringBuilder displayText = new StringBuilder();
        displayText.append("Library contains ").append(library.totalBooks()).append(" books:\n");
        for (int i = 0; i < library.totalBooks(); i++) {
            displayText.append(i + 1).append(". ").append(library.getBook(i)).append("\n");
        }
        displayArea.setText(displayText.toString());
    }

    public static void main(String[] args) {
        SwingUtilities.invokeLater(() -> new LibraryManagementSystem());
    }
}


